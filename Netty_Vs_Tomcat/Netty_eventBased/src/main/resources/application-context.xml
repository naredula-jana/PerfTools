<?xml version="1.0" encoding="UTF-8"?>
 
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
       ">

	<camelContext
		xmlns="http://camel.apache.org/schema/spring">

		<hystrixConfiguration id="sharedConfig" corePoolSize="2" maxQueueSize="100" executionTimeoutInMilliseconds="5000" 
			circuitBreakerSleepWindowInMilliseconds="10000" />

		<route>
			<from uri="direct:sampleroute1" />
			<setExchangePattern pattern="InOut" />
			<to uri="bean:myBean?method=computeText" />
			<multicast id="searchAndBrowseWithStoreIds"
				parallelProcessing="true" stopOnException="true"
				executorServiceRef="sharedNIOPool">
				<pipeline>
					<to uri="bean:myBean?method=appendSomeText1" />
					<to uri="bean:myBean?method=appendSomeText2" />
				</pipeline>
				<pipeline>
					<to uri="bean:myBean?method=appendSomeText3" />
					<to uri="bean:myBean?method=appendSomeText4" />
					<to uri="bean:myBean?method=appendSomeText1" />
					<to uri="bean:myBean?method=appendSomeText2" />
				</pipeline>
			</multicast>
		</route>


		<route>
			<from uri="direct:multicastlargehysterix" />
			<setExchangePattern pattern="InOut" />
			<to uri="bean:myBean?method=computeText" />

			<multicast id="searchmulticasthyst" parallelProcessing="true"
				stopOnException="true" executorServiceRef="sharedNIOPool">
				
				<hystrix hystrixConfigurationRef="sharedConfig">
					<to uri="bean:myBean?method=appendSomeText1" />
					<onFallback>
						<to uri="bean:myBean?method=fallback" />
					</onFallback>
				</hystrix>
				<hystrix hystrixConfigurationRef="sharedConfig">
					<to uri="bean:myBean?method=appendSomeText2" />
					<onFallback>
						<to uri="bean:myBean?method=fallback" />
					</onFallback>
				</hystrix>
				<hystrix hystrixConfigurationRef="sharedConfig">
					<to uri="bean:myBean?method=appendSomeText3" />
					<onFallback>
						<to uri="bean:myBean?method=fallback" />
					</onFallback>
				</hystrix>
				<hystrix hystrixConfigurationRef="sharedConfig">
					<to uri="bean:myBean?method=appendSomeText4" />
					<onFallback>
						<to uri="bean:myBean?method=fallback" />
					</onFallback>
				</hystrix>
				<hystrix hystrixConfigurationRef="sharedConfig">
					<to uri="bean:myBean?method=appendSomeText5" />
					<onFallback>
						<to uri="bean:myBean?method=fallback" />
					</onFallback>
				</hystrix>
				<hystrix hystrixConfigurationRef="sharedConfig">
					<to uri="bean:myBean?method=appendSomeText6" />
					<onFallback>
						<to uri="bean:myBean?method=fallback" />
					</onFallback>
				</hystrix>
				<hystrix hystrixConfigurationRef="sharedConfig">
					<to uri="bean:myBean?method=appendSomeText7" />
					<onFallback>
						<to uri="bean:myBean?method=fallback" />
					</onFallback>
				</hystrix>
			</multicast>
		</route>
		
		<route>
			<from uri="direct:multicastlarge" />
			<setExchangePattern pattern="InOut" />
			<to uri="bean:myBean?method=computeText" />

			<multicast id="searchmulticast" parallelProcessing="true"
				stopOnException="true" executorServiceRef="sharedNIOPool">

				<to uri="bean:myBean?method=appendSomeText1" />
				<to uri="bean:myBean?method=appendSomeText2" />
				<to uri="bean:myBean?method=appendSomeText3" />
				<to uri="bean:myBean?method=appendSomeText4" />
				<to uri="bean:myBean?method=appendSomeText5" />
				<to uri="bean:myBean?method=appendSomeText6" />
				<to uri="bean:myBean?method=appendSomeText7" />
			</multicast>
		</route>
		
		<route>
			<from uri="direct:multicastsmall" />
			<setExchangePattern pattern="InOut" />
			<to uri="bean:myBean?method=computeText" />
			<multicast id="searchmulticastsmall"
				parallelProcessing="true" stopOnException="true"
				executorServiceRef="sharedNIOPool">
				<to uri="bean:myBean?method=appendSomeText1" />
				<to uri="bean:myBean?method=appendSomeText2" />
			</multicast>
		</route>
		<route>
			<from uri="direct:multicastsmallAsyncWeb" />
			<setExchangePattern pattern="InOut" />
			<to uri="bean:myBean?method=computeText" />
			<multicast id="testIdmulticastsmall"
				parallelProcessing="true" stopOnException="true"
				executorServiceRef="sharedNIOPool">
				<to uri="bean:myBean?method=appendSomeText100" />
				<to uri="bean:myBean?method=appendSomeText200" />
			</multicast>
		</route>



		<!-- <route> <from uri="direct:sampleroute3" /> <setExchangePattern pattern="InOut" 
			/> <to uri="bean:myBean?method=appendSomeText2"/> <multicast id="searchAndBrowse2" 
			parallelProcessing="true" stopOnException="true" executorServiceRef="sharedNIOPool"> 
			<to uri="bean:myBean?method=appendSomeText3"/> <to uri="bean:myBean?method=appendSomeText4"/> 
			<to uri="bean:myBean?method=appendSomeText1"/> <to uri="bean:myBean?method=appendSomeText2"/> 
			</multicast> </route> -->

	</camelContext>
    
    <bean id="myBean" class="com.NettyServer.CamelBeanEvent"/>
     <bean id="hysterixbuilder" class="com.NettyServer.Hysterixbuilder"/>
    
    <bean id="poolBuilder" class="org.apache.camel.component.netty4.NettyWorkerPoolBuilder">
                <property name="workerCount" value="2"/>
    </bean>
              
              
    <bean id="sharedNIOPool" class="io.netty.channel.EventLoopGroup"
                factory-bean="poolBuilder" factory-method="build" destroy-method="shutdown">
    </bean>
 
</beans>
